server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;
    server_name {orthanchttpdomain};

    access_log /var/log/nginx/orthanc-http-access.log;
    error_log /var/log/nginx/orthanc-http-error.log;

    ssl_certificate {certificate_path};
    ssl_certificate_key {certificate_key_path};

    include /etc/nginx/default.d/*.conf;

    add_header Access-Control-Allow-Origin '*' always;
    add_header Access-Control-Allow-Credentials 'true' always;
    add_header Access-Control-Allow-Headers 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range' always;
    add_header Access-Control-Allow-Methods 'GET,POST,OPTIONS,PUT,DELETE,PATCH' always;
    add_header Access-Control-Max-Age 1728000 always;
    add_header Cross-Origin-Opener-Policy 'same-origin' always;
    add_header Cross-Origin-Embedder-Policy 'require-corp' always;
    add_header Cross-Origin-Resource-Policy 'cross-origin' always;

    # Set maximum upload size to 1GB
    client_max_body_size 1G;

    location / {
        if ($request_method = 'OPTIONS') {
            return 204;
        }
        proxy_pass http://127.0.0.1:8042;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_ssl_server_name on;
    }
}

server {
    listen 80;
    listen [::]:80;
    server_name {orthanchttpdomain};
    location / {
        return 301 https://$host$request_uri;
    }
}
